name: "Check Pull Request Readiness"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REPOSITORY_TYPE: public
  GITHUB_REPOSITORY: ${{ github.repository }}
  BRANCH_NAME: ${{ github.ref }}

jobs:
  install-dependencies:
    name: Installing dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: bash config/venv_setup.sh

  code-style:
    name: Code Style
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Code Style
        run: |
          bash config/run_pylint.sh

  mypy-checks:
    name: Mypy checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: MyPy check
        run: |
          bash config/run_mypy.sh

  unittests:
    name: Unittests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Run tests
        run: |
          bash config/run_tests.sh

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ unittests ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Run start
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/run_coverage.sh

  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]
    steps:
      - uses: actions/checkout@master
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en aspell-ru
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Spell check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/spellcheck/run_spellcheck.sh

  flake8-checks:
    name: Import style checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Flake8 check
        run: |
          bash config/flake8/run_flake8.sh

  pymarkdownlnt-checks:
    name: Pymarkdownlnt checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Pymarkdownlnt check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/pymarkdownlnt/run_pymarkdownlnt.sh

  requirements-check:
    name: Requirements check
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Dependencies check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/run_requirements_check.sh
